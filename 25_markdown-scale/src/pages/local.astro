---
import Layout from "../layouts/Layout.astro";
import {promises as fs} from 'fs';
import {resolve} from 'path';
import {get_section_urls, get_section_file_from_url} from "@/layout/nav_section"

const {page} = Astro.params;
const page_path = await get_section_file_from_url('/local/markdown',page,'/markdown/')
console.log(`Astro/blog> url: ${page} file: ${page_path}`)

let found = true
let Post = null
try {
  await fs.access(page_path)
} catch {
    console.warn(`Astro/blog> ${page} does not exist`)
    found = false
}

if(found){
    const posts = import.meta.glob('../../local/markdown/**/*.{md,mdx}')//relative to this component file
    const component_path = process.cwd()+'/src/pages/'
    const Post_path = Object.keys(posts).find((path)=>(resolve(component_path,path) == page_path))
    

    if((typeof Post_path == "undefined")){
        console.warn(`Astro/blog> ${page} could not be imported`)
        found = false
    }
    if(found){
        Post = await posts[Post_path]()
    }
}

export async function getStaticPaths(){
    const static_files_paths = await get_section_urls('/local/markdown','/markdown/')
    return static_files_paths.map((url)=>({params:{page:url}}))
}

---
{Post &&
<Layout title={Post.frontmatter.title} headings={Post.getHeadings()}>
        <Post.Content />
</Layout>
}
