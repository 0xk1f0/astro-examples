---
import Layout from '../layouts/Layout.astro'
import Card from '../components/Card.astro'
import { suid } from '../libs/utils'
import { get_counter, set_counter } from './sessions'

const proj = "14_client-storage-counter"

let session_id = suid()
if(Astro.url.searchParams.has('session_id')){
	session_id = Astro.url.searchParams.get('session_id')
	console.log(`index.astro> retrieved session_id from url param '${session_id}'`)
}else{
	console.log(`index.astro> assigned new session_id '${session_id}'`)
}

let counter = get_counter(session_id)
if(counter == null){
	counter = 0
	set_counter(session_id,counter)
}

---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Session ID <span class="text-gradient session_id">{session_id}</span></h1>
		<a href={`https://github.com/MicroWebStacks/astro-examples/tree/main/${proj}`} target="_blank">github project '{proj}'</a>
		<p class="instructions">
		Using session Storage and URL parameters
		</br>
		This counter will persist through pages relaod despite being a client counter.
		</p>
		<ul>
			<Card title="Persistent" init={counter}/>
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
</style>
